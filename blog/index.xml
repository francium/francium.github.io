<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on francium</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on francium</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 22 Aug 2020 12:00:00 -0400</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making delegation easier in JavaScript (TypeScript)</title>
      <link>/blog/2020-08-22-making-delegation-easier-in-javascript/</link>
      <pubDate>Sat, 22 Aug 2020 12:00:00 -0400</pubDate>
      
      <guid>/blog/2020-08-22-making-delegation-easier-in-javascript/</guid>
      <description>Using metaprogramming to enable easier method delegation</description>
    </item>
    
    <item>
      <title>React Hooks: A very brief intro</title>
      <link>/blog/2020-08-07-react-hooks-brief-intro/</link>
      <pubDate>Fri, 07 Aug 2020 12:00:00 -0400</pubDate>
      
      <guid>/blog/2020-08-07-react-hooks-brief-intro/</guid>
      <description>React Hooks API appears to be a immediate-mode layer on top of the traditional retained-mode style React system.
Internally, the library knows which component is currently being rendered and since a hook can only be called from a React component function or another hook, React is able to keep track of function calls to the hook APIs to &amp;lsquo;magically&amp;rsquo; manage state without being explicit about function calls across multiple render cycles.</description>
    </item>
    
    <item>
      <title>Trigger bash commands in a Docker container from host</title>
      <link>/blog/2020-04-18-trigger-command-in-docker-container/</link>
      <pubDate>Sat, 18 Apr 2020 15:38:21 -0400</pubDate>
      
      <guid>/blog/2020-04-18-trigger-command-in-docker-container/</guid>
      <description>Here is an easy way to trigger a command inside a docker container. One use case of this is to trigger a compiler, which is running inside a container, to recompile sources.
Make sure inotify-tools is installed on the container, apt install inotify-tools (Debian/Ubuntu), pacman -S inotify-tools (Arch). It&amp;rsquo;s also assumed some directory is mounted on the container which the host can write to and container can read.
The trick here is a .</description>
    </item>
    
    <item>
      <title>A Few Thoughts About Elm</title>
      <link>/blog/a-few-thoughts-about-elm/</link>
      <pubDate>Mon, 03 Jun 2019 17:18:53 -0400</pubDate>
      
      <guid>/blog/a-few-thoughts-about-elm/</guid>
      <description>Note: This is fairly rough right now. I may come back and revise it in the future.
This will not be an introduction to Elm. If you do not know what Elm is, have a look at the wikipedia article about Elm and the Elm website.
Prior to learning Elm, I did not know anything about functional programming aside from map and some vague understand of reduce. Of course, functional programming is a lot more than just map and reduce.</description>
    </item>
    
    <item>
      <title>An Implementation of Parallel Shearshort in C using PThreads</title>
      <link>/blog/implementation-of-parallel-shearort-in-c/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/implementation-of-parallel-shearort-in-c/</guid>
      <description>This will be a look at a parallel implementation of Shearsort using POSIX Threads (PThreads) in the C programming language.
This is not meant to be an efficient or optimal implementation, nor should it be considered production ready code. This is purely an educational exercise. I&amp;rsquo;m also not a seasoned C/C++ developer, so expect some errors or downright stupidity here and there. If you have any suggestions for improvements feel free to create an issue on GitHub.</description>
    </item>
    
    <item>
      <title>GNOME Mutli-Monitor Workspace Fix (Gnome 3.30)</title>
      <link>/blog/gnome-mutli-monitor-workspace-fix/</link>
      <pubDate>Sat, 06 Oct 2018 20:18:48 -0400</pubDate>
      
      <guid>/blog/gnome-mutli-monitor-workspace-fix/</guid>
      <description>workspaces_only_on_primary setting is suppose to make workspaces work correctly [1] in a multi-monitor setup.
There are older articles on the internet about enabling this option, but they won&amp;rsquo;t work with newer versions of GNOME. Prior to 3.30, I was using a very similar command which was described by Greg Cordts in his post on the subject.
After upgrading to GNOME 3.30, this way of enabling the option stopped working. After reporting this to the GNOME team as a bug, two individuals provided some very useful information,</description>
    </item>
    
    <item>
      <title>Hide YouTube&#39;s &#34;Recommended For You&#34; suggestions</title>
      <link>/blog/hide-youtube-recommended-videos/</link>
      <pubDate>Sat, 06 Oct 2018 19:43:00 -0400</pubDate>
      
      <guid>/blog/hide-youtube-recommended-videos/</guid>
      <description>One thing I find quite annoying with YouTube is &amp;ldquo;Recommended For You&amp;rdquo; spam in the related videos section. I do not sign into YouTube and use Firefox Containers so most &amp;ldquo;Recommended For You&amp;rdquo; videos are irrelevant, distracting, and seem suspiciously like they&amp;rsquo;ve been paid for (I don&amp;rsquo;t know if this is true).
As a user of uBlock Origin, I do have the ability to add custom filters to block DOM elements.</description>
    </item>
    
    <item>
      <title>Book Notes - Matthew Griffith, &#34;Why Elm&#34;</title>
      <link>/blog/book-notes-matthew-griffith-why-elm/</link>
      <pubDate>Sat, 17 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/book-notes-matthew-griffith-why-elm/</guid>
      <description>Elm incorporates some of the advances from the last 40 years of programming design without learning academic jargon Many pain points of frontend development don&amp;rsquo;t exist in Elm - nulls, undefined is not a function - and runtime exceptions are extremely rare Static typing, compile time checks, friendly error messages, type signature inference Some experience Elm programmers will start a program by sketching out the type signatures first to get a high-level view of what the various APIs will be, organization will look like and create a specification for the code.</description>
    </item>
    
    <item>
      <title>Using Rsync to efficiently backup (mirror) hard drives</title>
      <link>/blog/using-rsync-to-backup-mirror-drives/</link>
      <pubDate>Tue, 26 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/using-rsync-to-backup-mirror-drives/</guid>
      <description>Background I have a Raspberry Pi setup with an external hard drive that is accessible over Samba. It&amp;rsquo;s be quite reliable so far, but I wanted to backup the data to another external drive hooked up to the same Raspberry Pi.
I found a simple solution to this problem using Rsync and Systemd timers (as opposed to installing Cron and learning Cron, but if you wish, you can substitute Systemd with Cron).</description>
    </item>
    
    <item>
      <title>How to access the McMaster CAS virtual machines on Linux host</title>
      <link>/blog/access-mcmaster-cas-virtual-machines-on-linux/</link>
      <pubDate>Tue, 10 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/blog/access-mcmaster-cas-virtual-machines-on-linux/</guid>
      <description>Using openconnect Install openconenct
openconnect sslvpn.mcmaster.ca (try with sudo if it fails)
If nothing failed, you should be connected
Tested on Xubuntu and Debian (x86_64).
Download the VPN client for linux, *.tar.gz from https://www.mcmaster.ca/uts/network/vpn/
Download the VMWare Horizon client, *bundle from https://www.vmware.com/go/viewclients
cd to the location of both downloads
Install libudev1 and libpangox-1.0-dev and if it is not already installed
$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install libudev1 libpangox-1.0-dev  Extract the VPN client</description>
    </item>
    
    <item>
      <title>The Knights Who say... Ni</title>
      <link>/blog/ni-ni-ni/</link>
      <pubDate>Wed, 28 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>/blog/ni-ni-ni/</guid>
      <description> We are no longer the knights who say Ni! We are now the knights who say ekki-ekki-ekki-pitang-zoom-boing!
&amp;ndash; Monty Python
 </description>
    </item>
    
  </channel>
</rss>